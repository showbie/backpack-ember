{
	"version": 3,
	"file": "dummy.css",
	"sourceRoot": "/Users/jeff/Showbie/backpack-ember/app/styles",
	"sources": [
		"../../out-147-broccoli_merge_trees_full_application/app/styles/app.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_all.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_functions.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_mixins.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_mixins.type.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_fonts.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_placeholders.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_variables.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_vars.color.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_vars.color-ntc.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_vars.layout.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_vars.type.scss",
		"../../out-147-broccoli_merge_trees_full_application/app/styles/@showbie/backpack-ember/_vars.legacy.scss"
	],
	"sourcesContent": [
		"// consuming applications can @import any scss file from the `addon/styles/abstract` directory\n@import '@showbie/backpack-ember/all';\n\n.sb-show-main {\n  padding: 2rem;\n  background-color: transparent !important;\n\n  .ember-application {\n    margin-top: -2px;\n    margin-left: -2px;\n  }\n}\n",
		"@charset 'utf-8';\n////\n/// Sass abstracts manifest\n///\n/// Parent applications should import just this file. It provides\n/// access to all the mixins, variables, etc. as well as a separate\n/// global styles mixin. External add-ons should import the various\n/// partials separately.\n///\n/// @group branding\n////\n\n@import 'functions';\n@import 'mixins';\n@import 'fonts';\n@import 'placeholders';\n@import 'variables';\n\n///\n/// Apply global styles\n///\n/// This mixin should only be included in a parent application,\n/// otherwise these styles will be duplicated in the\n/// final stylesheet.\n///\n/// @example scss\n///     @include showbie-global-styles();\n/// @output Bare element styles that sit on top of Normalize.css, as\n///         well as a few high-level utility classes.\n///\n@mixin showbie-global-styles() {\n  ///\n  /// Include Avenir web-fonts\n  ///\n  /// @see {mixin} avenir\n  ///\n  @include avenir();\n\n  ///\n  /// Root element styles\n  ///\n  /// 1. Set-up box-sizing reset.\n  /// 2. Reset `line-height` to browser default. Not ideal, but\n  ///    refactoring all the visual diffs is worse.\n  ///\n  html {\n    box-sizing: border-box; // [1]\n    font-size: $baseline;\n    line-height: initial; // [2]\n\n    @include bp(large) {\n      font-size: $baseline-lg;\n    }\n  }\n\n  ///\n  /// A better `box-sizing` best-practice\n  /// @link https://css-tricks.com/?p=175473\n  /// @link http://paulirish.com/2012/box-sizing-border-box-ftw\n  ///\n  * {\n    &,\n    &::before,\n    &::after {\n      box-sizing: inherit;\n    }\n  }\n\n  body {\n    background-color: $white;\n    font-family: 'Avenir W04', 'Helvetica Neue', Helvetica, sans-serif;\n    text-rendering: optimizeLegibility;\n  }\n\n  ///\n  /// Ensure even links missing the href attribute changes the mouse\n  /// cursor on hover.\n  ///\n  a {\n    cursor: pointer;\n  }\n\n  ///\n  /// 1. Ensure buttons don't get a border-radius set by Chrome.\n  ///    @link https://www.chromestatus.com/feature/5743649186906112\n  ///\n  button {\n    border-radius: 0; /* [1] */\n  }\n\n  .show {\n    display: block !important;\n  }\n\n  .hide {\n    display: none !important;\n  }\n\n  ///\n  /// Utility class to fully overlap an element's parent container.\n  /// Requires the parent element to have its own `position` set to\n  /// something other than `static`.\n  ///\n  .fill {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n  }\n\n  ///\n  /// Prevent overscrolling in macOS browsers\n  ///\n  /// Stops browsers from scrolling past the start/end of the\n  /// document. Used when previewing a post with\n  /// `sbe-preview` component.\n  ///\n  .disallow-scroll {\n    &,\n    body {\n      overflow: hidden;\n    }\n  }\n\n  ///\n  /// Visibly hide an element but still expose it to screen readers.\n  ///\n  .sr-only {\n    @extend %visually-hidden;\n  }\n}\n",
		"////\n/// Custom helper functions\n///\n/// @group branding.functions\n////\n\n///\n/// Return a colour value for a given palette\n///\n/// @access public\n/// @param {string} $hue\n/// @param {string} $weight [400]\n/// @param {color} [$on-color]\n/// @return {color}\n/// @throw  If a colour cannot be found in the given colour map, an\n///         error message indicating available weights will display.\n/// @see {function} color-multiply\n/// @since 1.1.0\n///\n@function color($hue, $weight: 400, $on-color: null) {\n  $fetched-color: map-get($hue, $weight);\n\n  @if $on-color != null {\n    $fetched-color: color-multiply($fetched-color, $on-color);\n  }\n\n  @if type-of($fetched-color) == color {\n    @return $fetched-color;\n  } @else {\n    @error 'Color `#{$hue} - #{$weight}` not found. Available weights for #{$hue} are: #{available-names($hue)}';\n  }\n}\n\n///\n/// Darkens the foreground colour by the background colour\n///\n/// Provides a similar effect to the `multiply` blend-mode, although\n/// without any transparency. Good for use on solid colours.\n///\n/// @param {color} $foreground\n/// @param {color} $background [#fff]\n/// @return {color}\n/// @since 1.1.0\n///\n@function color-multiply($foreground, $background: #fff) {\n  @return $foreground * $background / 255;\n}\n\n///\n/// Slightly lighten a color\n///\n/// @access public\n/// @requires $base-tint-color - Colour to tint with\n/// @param {color} $color - Colour to tint\n/// @param {number} $percentage - % of `$color` in returned colour\n/// @return {color}\n/// @link https://css-tricks.com/snippets/sass/tint-shade-functions/\n///\n@function tint($color, $percentage) {\n  @return mix($base-tint-color, $color, $percentage);\n}\n\n///\n/// Slightly darken a color\n///\n/// @access public\n/// @requires $base-shade-color - Colour to shade with\n/// @param {color} $color - Colour to shade\n/// @param {number} $percentage - % of `$color` in returned colour\n/// @return {color}\n/// @link https://css-tricks.com/snippets/sass/tint-shade-functions/\n///\n@function shade($color, $percentage) {\n  @return mix($base-shade-color, $color, $percentage);\n}\n\n///\n/// Get a reasonable hover color\n///\n/// @access public\n/// @param {color} $color - Base colour\n/// @param {number} $shade-amount - % to modify lightness by\n/// @param {number} $sat-amount - % to modify saturation by\n/// @param {string} $shade-action - One of [darken | lighten]\n/// @param {string} $sat-action - One of [desaturate | saturate]\n/// @return {color}\n/// @since 2.1.0\n///\n@function sbe-hover($color, $shade-amount: 6%, $sat-amount: 8%, $shade-action: darken, $sat-action: desaturate) {\n  $hover-color: if($shade-action == darken, darken($color, $shade-amount), lighten($color, $shade-amount));\n  @return if($sat-action == desaturate, desaturate($hover-color, $sat-amount), saturate($hover-color, $sat-amount));\n}\n",
		"////\n/// Utility mixins\n///\n/// Apply common property patterns easily.\n///\n/// @group branding.mixins\n////\n\n@import 'mixins.type';\n\n///\n/// Breakpoint mixin for media queries\n///\n/// @param {string|number} $point - The min-width value to output in\n///          the media-query. String values can be one of:\n///          [small | medium | medium-large | large]\n///          Number values must include a unit such as `px`.\n/// @example scss\n///     .sidebar {\n///       width: 33%;\n///\n///       @include bp(medium) {\n///         width: 300px;\n///       }\n///     }\n///\n/// @example scss - You can also pass a custom value\n///     @include bp(400px) {\n///       width: 300px;\n///     }\n///\n@mixin bp($point) {\n  @if $point == small {\n    @media (min-width: $bp-sm) {\n      @content;\n    }\n  } @else if $point == medium {\n    @media (min-width: $bp-md) {\n      @content;\n    }\n  } @else if $point == medium-large {\n    @media (min-width: $bp-lg) {\n      @content;\n    }\n  } @else if $point == large {\n    @media (min-width: $bp-xl) {\n      @content;\n    }\n  } @else {\n    @media (min-width: $point) {\n      @content;\n    }\n  }\n}\n\n///\n/// Font smoothing\n///\n/// Apply rules to enable/disable better font smoothing.\n///\n/// @param {string} $value [on] - On/off switch for smoothing props.\n/// @todo \"Off\" properties should probably be set to `initial` for\n///       browser consistency.\n///\n@mixin font-smoothing($value: on) {\n  @if $value == on {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  } @else {\n    -moz-osx-font-smoothing: auto;\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n}\n\n///\n/// Resposive font-sizing\n///\n/// Set a font size with appropriate likeness on varying screen sizes.\n///\n/// @param {number} $size - Desired size at smaller breakpoints. Must\n///          include a valid font-size unit (i.e. `px`).\n/// @example scss\n///     .element {\n///       @include fs(16px);\n///     }\n///\n/// @output\n///     .comment { font-size: 16px; }\n///     @media (min-width: 1024px) {\n///       .comment { font-size: 17px; }\n///     }\n///\n@mixin fs($size) {\n  font-size: $size;\n\n  @include bp(large) {\n    font-size: $size + 1;\n  }\n}\n\n///\n/// Font weight\n///\n/// Set the font-weight. This used to update the visual weight by\n/// changing the `font-family`. No longer required — just set the\n/// `font-weight` property using the numerical scale.\n///\n/// @deprecated Just apply font-weight manually\n///\n@mixin f($weight) {\n  font-weight: $weight;\n}\n\n///\n/// Consistent transitions\n///\n/// @todo These can probably just be set as variables. No need for\n///       a mixin. Alternatively, refactor them all into a single\n///       mixin that takes the transition property as its argument.\n///\n@mixin transition-bg() {\n  transition: background 0.2s ease;\n}\n\n@mixin transition-border {\n  transition: border-color 0.2s ease;\n}\n\n@mixin transition-opacity() {\n  transition: opacity 0.2s ease;\n}\n\n@mixin transition-color() {\n  transition: color 0.2s ease;\n}\n\n@mixin transition-fill() {\n  transition: fill 0.2s ease;\n}\n\n///\n/// Button style reset\n///\n/// Reverts default `<button>` element styles.\n///\n@mixin clear-button {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  background: 0;\n  text-align: inherit;\n}\n\n///\n/// Hide text\n/// @see {mixin} hide-text-reset\n///\n@mixin hide-text {\n  overflow: hidden;\n  text-indent: 100%;\n  white-space: nowrap;\n}\n\n///\n/// Screen-reader only\n/// @see {placeholder} visually-hidden\n///\n@mixin sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  white-space: nowrap;\n  clip-path: inset(50%);\n}\n\n\n///\n/// Show text\n///\n/// Reverses `hide-text`. Useful when mobile style uses `hide-text`\n/// but larger screens shouldn't.\n///\n/// @see {mixin} hide-text\n///\n@mixin hide-text-reset {\n  overflow: visible;\n  text-indent: 0;\n  white-space: normal;\n}\n\n///\n/// Apply a striped-gradient background-image\n///\n/// @param {color} $color [$gradient-striped-overlay]\n/// @param {string|number} $angle [45deg]\n/// @link https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/mixins/_gradients.scss\n///\n@mixin gradient-striped($color: $gradient-striped-overlay, $angle: 45deg) {\n  background-image: linear-gradient(\n    $angle,\n    $color 25%,\n    transparent 25%,\n    transparent 50%,\n    $color 50%,\n    $color 75%,\n    transparent 75%,\n    transparent\n  );\n}\n\n///\n/// Create a triangle shape with CSS\n///\n/// @param {string} $position - One of [top | right | bottom | left]\n/// @param {color} $color - The colour of the triangle\n/// @param {number} $size - The size of the triangle, must include an\n///        appropriate unit (i.e. `px`).\n/// @link https://css-tricks.com/snippets/css/css-triangle/\n///\n@mixin triangle($position, $color, $size) {\n  content: '';\n  display: block;\n  position: absolute;\n  width: 0;\n  height: 0;\n  margin: -$size;\n  border: $size solid;\n\n  @if $position == top {\n    top: 0;\n    left: 50%;\n    border-top: 0;\n    border-color: $color transparent;\n  } @else if $position == right {\n    top: 50%;\n    right: 0;\n    border-right: 0;\n    border-color: transparent $color;\n  } @else if $position == bottom {\n    bottom: 0;\n    left: 50%;\n    border-bottom: 0;\n    border-color: $color transparent;\n  } @else if $position == left {\n    top: 50%;\n    left: 0;\n    border-left: 0;\n    border-color: transparent $color;\n  }\n}\n\n///\n/// Expand touch hit area\n///\n/// Can't be used for non-relatively positioned elements.\n///\n/// @param {number} $percent [10%]\n///\n@mixin expand-touch-area($percent: 10%) {\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: -$percent;\n    right: -$percent;\n    bottom: -$percent;\n    left: -$percent;\n  }\n}\n\n///\n/// Set SVG fill\n///\n/// Colors a nested SVG icon and transitions it on hover/focus.\n///\n/// @todo This can be simplified by setting icon `fill` property\n///       to `currentColor`. The transition will inherit from the\n///       icon's parent element.\n///\n@mixin icon-fill(\n  $fill-color: $color-primary-dark,\n  $fill-hover: $color-primary-dark-hover\n) {\n  > svg {\n    @include transition-fill();\n    fill: $fill-color;\n  }\n\n  &:hover,\n  &:focus {\n    > svg {\n      fill: $fill-hover;\n    }\n  }\n}\n",
		"\n// Type Mixins\n// ===\n//\n// `title` eg. usage: filenames in the post listing\n// `body` eg. usage: titles in master cell, bubble text in the post listing\n// `meta` eg. usage: due dates in assignment master cell, author details in the post listing\n//\n// | tag | name      | sm (1rem=12px)  | md (1rem=12px) | lg (1rem=14px) |\n// |---------------------------------------------------------------------|\n// | h1  | header    | 21/24   Heavy   | 21/24 Heavy    | 22/28 Heavy    |\n// | h1  | header    | 21/24   Book    | 21/24 Book     | 22/28 Book     |\n// | h2  | subheader | 18/24   Black   | 18/24 Black    | 19/28 Black    |\n// | h3  | title     | 17/20   Black   | 18/24 Black    | 19/28 Black    |\n// | p   | body      | 17/24   Book    | 17/24 Book     | 18/28 Book     |\n// | p   | meta      | 12/15   Roman   | 15/20 Roman    | 16/24 Roman    |\n\n@mixin type-header($bold: true) {\n  $font-weight: if($bold, 800, 400);\n\n  color: $black;\n  font-size: 21px;\n  font-weight: $font-weight;\n  line-height: 24px;\n}\n\n@mixin type-subheader() {\n  color: $black;\n  font-size: 18px;\n  font-weight: 900;\n  line-height: 2rem;\n\n  @include bp(large) {\n    font-size: 19px;\n  }\n}\n\n@mixin type-title() {\n  color: $black;\n  font-size: 17px;\n  font-weight: 900;\n  line-height: 20px;\n\n  @include bp(medium) {\n    font-size: 18px;\n    line-height: 2rem;\n  }\n\n  @include bp(large) {\n    font-size: 19px;\n  }\n}\n\n@mixin type-body() {\n  color: $black;\n  font-size: 17px;\n  font-weight: 400;\n  line-height: 2rem;\n\n  @include bp(large) {\n    font-size: 18px;\n  }\n\n  strong {\n    font-weight: 900;\n  }\n}\n\n@mixin type-meta($include-sm: true) {\n  color: $color-gray-text;\n  font-weight: 500;\n\n  @if $include-sm {\n    font-size: 12px;\n    line-height: 15px;\n\n    @include bp(medium) {\n      font-size: 15px;\n      line-height: 20px;\n    }\n\n  } @else {\n    font-size: 15px;\n    line-height: 20px;\n  }\n\n  @include bp(large) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n}\n",
		"////\n/// Font-face declarations\n///\n/// Define web-font family & weights.\n///\n/// @group branding.fonts\n////\n\n///\n/// Wrapping all the `@font-face` rules within a mixin ensures that\n/// the declarations aren't duplicated accidentally when importing\n/// the Sass in other applications.\n///\n@mixin avenir() {\n  ///\n  /// Avenir W04 35 Light\n  ///\n  @font-face {\n    font-family: 'Avenir W04';\n    font-style: normal;\n    font-weight: 300;\n    src: url('/showbie-ui/fonts/300/c886ac4d-0476-43f2-859c-69521d566f36.eot?#iefix');\n    src:\n      url('/showbie-ui/fonts/300/c886ac4d-0476-43f2-859c-69521d566f36.eot?#iefix') format('eot'),\n      url('/showbie-ui/fonts/300/bfb11081-e571-43ad-bed9-8953cfd4133e.woff2') format('woff2'),\n      url('/showbie-ui/fonts/300/e35493b4-782b-41f0-b3f0-b7e5d0ceab0b.woff') format('woff'),;\n  }\n\n  ///\n  /// Avenir W04 45 Book\n  ///\n  @font-face {\n    font-family: 'Avenir W04';\n    font-style: normal;\n    font-weight: 400;\n    src: url('/showbie-ui/fonts/400/920c15d4-2d04-48b5-8e84-e3bf5e3828d9.eot?#iefix');\n    src:\n      url('/showbie-ui/fonts/400/920c15d4-2d04-48b5-8e84-e3bf5e3828d9.eot?#iefix') format('eot'),\n      url('/showbie-ui/fonts/400/fe2d00d9-aadd-40f7-a144-22a6f695aa8f.woff2') format('woff2'),\n      url('/showbie-ui/fonts/400/c3795fc9-e264-4795-9a19-b57086aa6f7b.woff') format('woff');\n  }\n\n  ///\n  /// Avenir W04 55 Roman\n  ///\n  @font-face {\n    font-family: 'Avenir W04';\n    font-style: normal;\n    font-weight: 500;\n    src: url('/showbie-ui/fonts/500/f7924a2e-e8f5-4ac9-b0aa-167399cc2659.eot?#iefix');\n    src:\n      url('/showbie-ui/fonts/500/f7924a2e-e8f5-4ac9-b0aa-167399cc2659.eot?#iefix') format('eot'),\n      url('/showbie-ui/fonts/500/69473750-4214-45b1-856b-06e8f8de2086.woff2') format('woff2'),\n      url('/showbie-ui/fonts/500/57cea7be-0fae-457e-83f0-b7375aabb3f9.woff') format('woff');\n  }\n\n  ///\n  /// Avenir W04 65 Medium\n  ///\n  @font-face {\n    font-family: 'Avenir W04';\n    font-style: normal;\n    font-weight: 600;\n    src: url('/showbie-ui/fonts/600/4b08ce72-f57c-4113-84ba-56062e307075.eot?#iefix');\n    src:\n      url('/showbie-ui/fonts/600/4b08ce72-f57c-4113-84ba-56062e307075.eot?#iefix') format('eot'),\n      url('/showbie-ui/fonts/600/7839a002-2019-46e4-8db8-c8335356ceee.woff2') format('woff2'),\n      url('/showbie-ui/fonts/600/28433854-a1b7-4a30-b6a4-10c3a5c75494.woff') format('woff');\n  }\n\n  ///\n  /// Avenir W04 85 Heavy\n  ///\n  @font-face {\n    font-family: 'Avenir W04';\n    font-style: normal;\n    font-weight: 800;\n    src: url('/showbie-ui/fonts/800/7ed39c78-4da5-42df-831b-798b2272d1ac.eot?#iefix');\n    src:\n      url('/showbie-ui/fonts/800/7ed39c78-4da5-42df-831b-798b2272d1ac.eot?#iefix') format('eot'),\n      url('/showbie-ui/fonts/800/e9b44b79-923f-49b3-837c-290bc70628cc.woff2') format('woff2'),\n      url('/showbie-ui/fonts/800/fbd14ec6-aa86-4ccd-af83-931d5eb79910.woff') format('woff');\n  }\n\n  ///\n  /// Avenir W04 95 Black\n  ///\n  @font-face {\n    font-family: 'Avenir W04';\n    font-style: normal;\n    font-weight: 900;\n    src: url('/showbie-ui/fonts/900/f78abaf6-0dfb-4005-ab13-c97830e204ad.eot?#iefix');\n    src:\n      url('/showbie-ui/fonts/900/f78abaf6-0dfb-4005-ab13-c97830e204ad.eot?#iefix') format('eot'),\n      url('/showbie-ui/fonts/900/ef5800d8-b76d-43e8-87ff-81d455db24c0.woff2') format('woff2'),\n      url('/showbie-ui/fonts/900/1144e594-fd94-44b6-9cf8-171075a034cc.woff') format('woff');\n  }\n\n  ///\n  /// Access tracking import. Required by font license.\n  /// @link https://www.fonts.com/web-fonts/projects#354aa19e-76b0-4fb9-96ed-6d3b55182818\n  ///\n  @import url('http://fast.fonts.net/t/1.css?apiType=css&projectid=354aa19e-76b0-4fb9-96ed-6d3b55182818');\n}\n",
		"////\n/// Placeholder classes\n///\n/// `@extend` with caution.\n///\n/// @group branding.placeholders\n////\n\n///\n/// Truncate text overflow with ellipsis\n///\n/// @example scss\n///     .element {\n///       @extend %truncate;\n///     }\n///\n/// @output\n///     .element {\n///       overflow: hidden;\n///       text-overflow: ellipsis;\n///       white-space: nowrap;\n///     }\n///\n%truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n///\n/// Extends an element's hit area maybe?\n/// @todo Find out if this is used anywhere, potentially remove.\n///\n%touch {\n  &::after {\n    content: ' ';\n    display: block;\n    position: absolute;\n    z-index: 100;\n    top: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  &.active::after,\n  &:active::after,\n  &:focus::after {\n    transform: scale(1.25, 1.25);\n  }\n}\n\n///\n/// Text meant only for screen readers\n///\n%visually-hidden,\n%sr-only {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n",
		"////\n/// Variables manifest\n///\n/// Easily import all variables at once.\n///\n/// @group branding.variables\n////\n\n@import 'vars.color';\n@import 'vars.layout';\n@import 'vars.type';\n@import 'vars.legacy';\n",
		"////\n/// Colour palette variables\n///\n/// Provides branding & UI colour variables, a grayscale palette,\n/// and sets default utility colours for internal functions.\n///\n/// @group branding.variables\n////\n\n//\n// CONTENTS\n//\n// PRIMARY PALETTE ............. The main UI brand colours.\n// SECONDARY PALETTE ........... Complementary colours.\n// GRAYSCALE ................... Not quite 50 shades, but close.\n// UTILITY DEFAULTS ............ Defaults for functions & mixins.\n//\n\n@import 'vars.color-ntc';\n\n////\n/// Primary palette\n///\n/// @group branding.variables.color\n/// @TODO Confirm that `!default` flags can be removed from colour\n///       variables (except for utility defaults). These variables\n///       should have a single source of truth.\n////\n\n// CW:\n// This is an old-style blue that should be refreshed to match the new palette.\n// It's currently different from the new palette though (between mid and dark blue)\n// So should stay as a separate definition unless a design change is made.\n// Refreshing will require an update to the bg SVG/PNG as well.\n$color-body-legacy: $color-curious-blue-legacy;\n\n// The numeric suffix approximates opacity on `$color-blue-light`\n$color-blue-light-10: $color-alice-blue;\n$color-blue-light-25: $color-pattens-blue;\n$color-blue-light-40: $color-iceberg;\n$color-blue-light-60: $color-french-pass;\n$color-blue-light: $color-anakiwa;\n\n// NOTE: $color-blue-block and $color-blue are purposefully similar\n// For large swaths of blue, eg. backgrounds use:\n$color-blue-block: $color-picton-blue !default;\n// For text, icons, or strokes use:\n$color-blue: $color-cerulean !default;\n$color-blue-dark: $color-lochmara !default;\n\n////\n/// Secondary palette\n///\n/// @group branding.variables.color\n////\n\n////\n/// Grayscale\n///\n/// @group branding.variables.color\n////\n\n///\n/// Basic white\n///\n/// @type color\n///\n$white: #fff;\n\n///\n/// A \"weight\" scale map for shades of gray in the UI.\n///\n/// @type map\n/// @prop {color} gray.x00 - A shade of gray from light to dark.\n/// @since 1.1.0\n///\n$gray: (\n  100: $color-alabaster,\n  200: $color-seashell,\n  300: $color-porcelain,\n  400: $color-mercury,\n  480: $color-silver-sand--light,\n  500: $color-silver-sand,\n  600: $color-gull-gray,\n  700: $color-regent-gray,\n  800: $color-oslo-gray,\n  900: $color-rolling-stone\n);\n\n///\n/// Basic black\n///\n/// @type color\n///\n$black: #000;\n\n///\n/// Transparent\n///\n/// Seems a bit odd to have a variable for this when the\n/// `transparent` keyword could be used.\n///\n/// @type color\n///\n$transparent: rgba(0, 0, 0, 0);\n\n///\n/// @deprecated Use $gray scales instead\n///\n$gray-light: $color-alabaster !default;\n$gray-medium: $color-bombay !default;\n$gray-dark: $color-rolling-stone !default;\n\n////\n/// Utility defaults\n///\n/// @group branding.variables.color\n////\n\n///\n/// Base colour for tinting function.\n///\n/// @type color\n/// @see  {function} tint\n///\n$base-tint-color: $white !default;\n\n///\n/// Base colour for shading function.\n///\n/// @type color\n/// @see  {function} shade\n///\n$base-shade-color: $black !default;\n\n///\n/// Default colour in gradient stripe.\n///\n/// @type color\n/// @see  {mixin} gradient-striped\n///\n$gradient-striped-overlay: transparentize($white, 0.85) !default;\n\n$color-border: rgba(7, 2, 20, 0.1) !default;\n\n$color-modal-overlay: rgba(21, 32, 36, 0.33) !default;\n$color-panel-overlay: rgba(21, 32, 36, 0.1) !default;\n",
		"////\n/// Named colour variables\n///\n/// Colours are given a name and usage here, but grouped into\n/// palettes in `_vars.color.scss`.\n///\n/// @link http://chir.ag/projects/name-that-color\n///   Colour name generator\n/// @link https://www.npmjs.com/package/name-that-color\n///   CLI generator\n////\n\n///\n/// Used as background-color for panel headers, chat banners.\n///\n$color-alice-blue: #f1faff;\n\n///\n/// @deprecated\n/// @see $color-pattens-blue\n///\n$color-humming-bird: #e1f4fb;\n\n///\n/// Used for background-color of select boxes. Also used in\n/// AudioNote component controls.\n/// @since 1.1.0\n///\n$color-pattens-blue: #dcf3ff;\n\n///\n/// @deprecated\n/// @see $color-iceberg\n///\n$color-onahau: #caf0ff;\n\n///\n/// Used as a background-color.\n/// @since 1.1.0\n///\n$color-iceberg: #cbeeff;\n\n$color-french-pass: #bae8ff;\n$color-anakiwa: #8ad8ff;\n$color-picton-blue: #29b1f0;\n\n///\n/// Used for fine lines and small objects in our primary blue (text,\n/// stroke, icons). Also used in AudioNote component controls.\n///\n$color-cerulean: #009fe8;\n\n$color-lochmara: #0084c2;\n\n///\n/// @deprecated\n///\n$color-curious-blue-legacy: #16ace5;\n\n///\n/// Used for indicating primary action.\n///\n$color-fern: #64bc74;\n\n///\n/// Used in AudioNote component during recording.\n/// @since 1.1.0\n///\n$color-cinderella: #fce5e5;\n\n///\n/// @deprecated\n/// @see $color-froly\n///\n$color-apricot: #ec8183;\n\n///\n/// Used for indicating destructive action, also in AudioNote\n/// component during recording.\n/// @since 1.1.0\n///\n$color-froly: #f07f7f;\n\n///\n/// A hover/focus state for $color-apricot.\n///\n$color-red-orange: #fc3d39;\n\n$color-regent-gray: #8c97a1;\n\n// CW:\n// Good old comment bubble colours.\n$color-mercury: #e9e9eb;\n\n// CW:\n// super-super-light blue used in:\n//   - panel background for pending group invites\n//   - header background for post list headers e.g. announcements-only, new live-update posts\n//   - hover, active, and focused state of text box .handle, in slightly transparentized form.\n//   Notes:\n//   - hover variant was decided during dev (not spec'd via PSD) so could be easily expressed\n//     as SCSS function relative to main definition.\n//   - use in .handle states was decided during dev. Use here is not closely coupled with the other two\n//     contexts. Debatable whether the addition of transparency makes sense (default state of handles is opaque),\n//     and whether hover state is needed, given that the cursor also changes on hover.\n// $color-alice-blue: #f1faff;\n///\n/// @deprecated Possibly? Doesn't seem to be used anywhere.\n/// @see $color-alice-blue\n///\n$color-black-squeeze: #f5fcff;\n\n///\n/// Used as a background-color for the PostList form component.\n///\n/// For the Add Files/Cancel button, use a 33% whiter variation. It\n/// should work out to `#f2f3f4`.\n///\n/// @example scss\n///   background-color: tint($color-porcelain, 33%);\n/// @since 1.1.0\n///\n$color-porcelain: #ecedee;\n\n///\n/// The standard opaque colour for grey secondary text labels.\n///\n/// Used exclusively for text colours, no fills. The current\n/// definition works best over white or almost-white backgrounds.\n///\n/// @todo We might consider replacing this with a dark-and-\n///       transparent rgba colour for more consistent contrast on\n///       varying background colours.\n///\n$color-silver-sand: #b9bbbd;\n\n// CW:\n// Used less widely and less consistently than color-secondary-dark.\n// - background colour for group-wrapper within the text-on-page options popover, although this appears unnecessary.\n//   the size and alignment groups already sit on the grey background of the overall popover.\n// - text colour for empty folder titles and messages e.g. empty student portfolio.\n// - grey checkmark accessory for already-invited people in the group invite wizard.\n// - loading spinner in detail panel\n// - sign-up TOC footer link\n// Notes:\n// - text colour for empty folder titles is incorrect, should use color-secondary-dark instead\n//   (although the icon colour is supposed to be lighter than the text)\n// - group invite wizard checkmark colour is different from the iOS mockup colour. CW to investigate\n//   what standard colour def would be best for this element.\n//   - sign-up TOC footer link is incorrect, should be color-secondary-dark\n$color-silver-sand--light: #cac9cd;\n\n// CW:\n// One-off colour definition for the background of a selected text box when the text colour\n// is set to white. This is consistent with iOS and should be kept as is, but IMO should be\n// defined in some feature-specific module. Also it's only ever used as a transparent colour,\n// so perhaps the transparency should be included in the main definition.\n$color-fuscous-gray: #545454;\n\n// CW:\n// Not a UI colour def, but the content colour for grey text and ink annotations.\n// - used for the darker of the two grey text colours in the text box options palette\n// - used for the outline and checkmark colour when selecting the white colour in the text box options\n// - also randomly used to colour the voice note recorder buttons when the voice note save is in progress.\n//   a different colour def should be referenced there.\n$color-rolling-stone: #7a8184;\n\n// CW:\n// - Meant to be used for grouped list items in the master panel: lighter than the master panel\n//   grey background, but darker than the white background of the detail panel.\n//   Alternately, a 0.5 opaque white background would have the same appearance.\n//   .sbe-cell and .panelitem are two correct examples.\n// - incorrectly used as border colour for currently selected text box text color.\n//   That border colour should simply be white.\n$color-alabaster--light: #fcfcfc;\n\n// CW:\n// Use case one: hover state for a white-background element\n// - hover state background for help menu buttons (sbe-help)\n// - hover state background for file attachment buttons (sbe-actions-menu)\n// - hover background for x-list items, a new component that hasn't been deployed yet so I didn't check it out\n// - hover state for post list files\n// - hover background for voice note bubble\n// Use case two: background colour for light grey elements, like master panel and detail panel headers\n// - background colour for announcements-only banner\n// - background colour for master panel\n// - border colour for main tab-bar badges (to match master panel bg)\n// - in-popover heading for a list (e.g. list of parents in student info popover) (form-group__heading)\n// - background for portfolio__header\n// And this??\n// - border colour for sbe-attach__options where it seems to have no effect, probably deprecated\n// Notes:\n// When it's used as a hover state, it has the same appearance as rgba(0,0,0,0.3)\n// over a white background. This transparent version is used in some other\n// places like the wrench menu items. Might consider standardizing on one of the\n// two approaches.\n$color-alabaster: #f8f8f8;\n\n// CW:\n// - This is another TOP text box background colour that should be defined specific\n//   to that feature. It's always used with transparency so the transparency could be\n//   included in the original definition.\n// - it's also referenced in a saving state for the voice note recorder, but this reference\n//   should probably be factored out and replaced with a more generic colour definition.\n$color-wild-sand: #f2f5f5;\n\n// CW:\n// In general, this one could be replaced with #b9bbbd. Would be even better if we replaced both\n// with a dark-and-transparent equivalent for more consistent contrast on both white and grey backgrounds.\n// - unnecessary: disabled + button on new post UI when comment bubble contains text. On iOS\n//   this uses the standard #b9bbbd text colour.\n// - grey text in grey banner, e.g. paused class discussion banner (sbe-channel-detal__banner)\n//   this one is a little darker than #b9bbbd, which is good on a grey background, but we could\n//   achieve the same effect with a single colour by substituting a dark-but-transparent colour instead.\n// - unnecessary: disabled header text in drop zone modal (sbe-dropzone): this grey doesn't match the mockup anyway, in the mockup\n//   it's #90a8b2 (similar to the grey secondary labels used inside the document previewer)\n// - unnecessary: some labels in the join school flow. These should be #b9bbbd or transparent equivelant.\n// - unnecessary: text on page footer text should be #b9bbbd or transparent equivalent.\n// - unnecessary: text in sbe-quick-switcher should be #b9bbbd\n//   also, the hover state for that text is defined in the component, that should probably be defined more universally.\n// - unnecessary: x-label component should use #b9bbbd or transparent equivalent.\n// - unnecessary: sbe-post-form__action. should use #b9bbbd transparent equivalent.\n$color-bombay: #b5b7ba;\n\n// CW:\n// Colour for background of popovers. Seems to be used pretty consistently.\n// Darker than background of master panel, since borderless white fields need to have some contrast on top.\n// Also used for search field background in group invite wizard and modified to form the active state\n// of buttons in the export grades popover. Those ones are a little arbitrary but look OK as is.\n$color-seashell: #f0f0f0;\n\n// CW:\n// Colour for grey buttons in the document previewer.\n// Note that grey text labels should use a slightly darker grey not defined here:\n// #748d97\n$color-gull-gray: #90a8b2;\n\n// CW:\n// Blue hover state for colourful menus like the post list item actions menu.\n$color-lily-white: #e5f8ff;\n\n// CW:\n// Regular old grey buttons.\n// Note: As part of the blue refresh, the grey button background colour\n// is proposed to change to #8c97a1 (darker and more blueish)\n$color-gray-chateau: #989fa6;\n$color-oslo-gray: #898f95;\n\n$color-bunker: #070b12;\n\n$color-pale-slate: #c4c4c4;\n$color-nepal: #94b2c1;\n",
		"////\n/// Dimension variables\n///\n/// @group branding.variables\n////\n\n////\n/// Breakpoints\n///\n/// @group branding.variables.layout\n////\n\n$bp-sm: 448px !default;\n$bp-md: 640px !default;\n$bp-lg: 1024px !default;\n$bp-xl: 1280px !default;\n\n////\n/// Panel sizes\n///\n/// @group branding.variables.layout\n////\n\n$size-master-width-min: 320px !default;\n$size-master-width: 31.25vw !default;\n$size-master-width-max: 428px !default;\n$size-detail-width-max: 920px !default;\n$size-navbar-height: 4rem !default;\n$size-header-height: 6rem !default;\n$size-master-width-legacy: 360px !default; // TODO: remove this\n$size-pinned-bubble-width-max: 328px !default;\n\n$size-avatar-width: 40px !default;\n\n$padding-panel: 25px !default;\n$radius-popover: 10px !default;\n",
		"////\n/// Typography variables\n///\n/// @group branding.variables\n////\n\n///\n/// Medium screen baseline grid size\n///\n/// The default font-size is set based on this.\n///\n/// @see {mixin} showbie-global-styles\n///\n$baseline: 12px;\n$baseline-lg: 14px;\n\n///\n/// Available font weights\n///\n$font-black: 900;\n$font-heavy: 800;\n$font-medium: 600;\n$font-roman: 500;\n$font-book: 400;\n$font-light: 300;\n\n///\n/// Standard font sizes\n///\n$font-size-xsmall: 14px;\n$font-size-small: 15px;\n$font-size-normal: 17px;\n$font-size-large: 18px;\n$font-size-xlarge: 21px;\n",
		"////\n/// Legacy variables\n///\n/// These are used throughout `showbie/web` and `showbie-ui`.\n/// Some of these came likely deserve to live on, either as-is\n/// or in some new incarnation.\n///\n/// @TODO Migrate all of these variables into a better location\n/// or deprecate as required.\n///\n/// @group branding.legacy\n////\n\n$color-white: $white !default;\n$color-black: $black !default;\n$color-secondary-dark: $color-silver-sand !default;\n$color-gray-popoverbg: $color-seashell !default;\n$color-gray-light: $color-alabaster !default;\n$color-gray-text: $color-bombay !default;\n\n$color-bg: #fff !default;\n$color-link: rgba(0, 0, 0, 0.75) !default;\n$color-inner: rgba(152, 159, 166, 0.5) !default;\n$color-inner-hover: rgba(152, 159, 166, 0.75) !default;\n\n$box-shadow-color: rgba(0, 0, 0, 0.2) !default; // from web/lib/post-listing\n\n$button-color-primary: #5dbe6e !default;\n$button-color-primary-hover: #54ab63 !default;\n$button-color-secondary: $color-gray-chateau !default;\n$button-color-fade: $color-seashell !default;\n$button-color-fade-text: rgba($color-bunker, 0.34) !default;\n$button-color-destroy: #f07f7f !default;\n$text-color-destroy: #eb6767 !default;\n\n$max-thumbnail-size: 52px !default;\n"
	],
	"names": [],
	"mappings": "AAGA,AAAA,aAAa,CAAC;EACZ,OAAO,EAAE,IAAI;EACb,gBAAgB,EAAE,sBAAsB,GAMzC;EARD,AAIE,aAJW,CAIX,kBAAkB,CAAC;IACjB,UAAU,EAAE,IAAI;IAChB,WAAW,EAAE,IAAI,GAClB"
}